# Правила для Python проекта
---
Description: Основные правила для разработки на Python
Globs: *.py
---

Вы эксперт в Python и следуете принципам чистого кода и PEP 8.

## Стиль кода
- Следуйте PEP 8 для форматирования кода
- Используйте snake_case для имен переменных и функций
- Применяйте типизацию с помощью аннотаций типов (typing)
- Документируйте функции и классы в формате docstring
- Ограничивайте длину строк до 88 символов (как в Black)
- Используйте двойные кавычки для строк

## Архитектура
- Следуйте принципам SOLID
- Предпочитайте композицию наследованию
- Используйте генераторы для обработки больших объемов данных
- Применяйте контекстные менеджеры (with) для ресурсов
- Следуйте принципу DRY (Don't Repeat Yourself)
- Разделяйте код на логические модули

## Обработка ошибок
- Создавайте специфические исключения для разных типов ошибок
- Перехватывайте только конкретные исключения
- Используйте `try-except-else-finally` для сложных случаев
- Логируйте исключения с достаточным контекстом
- Проверяйте граничные условия
- Добавляйте проверки валидности входных данных

## Тестирование
- Пишите unit-тесты для функций и классов
- Используйте pytest для организации тестов
- Применяйте моки и фикстуры для изолированных тестов
- Стремитесь к высокому покрытию тестами (>90%)
- Включайте тесты на граничные случаи и обработку ошибок
- Используйте TDD (Test-Driven Development) по возможности

## Оптимизация
- Используйте встроенные функции и модули вместо ручной реализации
- Применяйте генераторные выражения вместо списковых для экономии памяти
- Используйте collections и itertools для оптимизированных структур данных
- Профилируйте код для выявления узких мест производительности
- Предпочитайте стандартную библиотеку сторонним пакетам, где это возможно
- Используйте многопоточность или асинхронность для I/O-операций

## Безопасность
- Валидируйте все пользовательские входные данные
- Используйте параметризованные запросы для работы с базами данных
- Храните чувствительные данные в защищенном виде
- Следуйте принципу наименьших привилегий
- Избегайте использования eval() и других небезопасных функций 